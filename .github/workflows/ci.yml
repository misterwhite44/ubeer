name: Playwright E2E Tests

on:
  push:
    branches:
      - main  # Remplace par la branche que tu utilises si nécessaire
  pull_request:
    branches:
      - main

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code du dépôt frontend
      - name: Checkout frontend repository
        uses: actions/checkout@v2

      # Étape 2 : Checkout du backend repository
      - name: Checkout backend repository
        uses: actions/checkout@v2
        with:
          repository: misterwhite44/back_ubeers  # Répertoire du backend (en utilisant GitHub Actions Checkout)
          path: back_ubeers  # Le répertoire du backend cloné

      # Étape 3 : Installer les dépendances du backend
      - name: Install backend dependencies
        run: |
          cd back_ubeers  # Accède au répertoire du backend cloné
          pip install -r requirements.txt  # Installe les dépendances du backend si nécessaire

      # Étape 4 : Démarrer le serveur Flask en arrière-plan
      - name: Start Flask backend server
        run: |
          cd back_ubeers  # Répertoire du backend
          nohup python3 app.py &  # Démarre Flask en arrière-plan avec python3
          sleep 10  # Attends que le serveur démarre

      # Étape 5 : Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Remplace par la version souhaitée

      # Étape 6 : Installer les dépendances du frontend
      - name: Install frontend dependencies
        run: |
          npm install

      # Étape 7 : Démarrer l'application frontend en arrière-plan
      - name: Start the frontend application
        run: |
          nohup npm start &  # Démarre l'application frontend en arrière-plan
          sleep 10  # Attends que le serveur frontend démarre

      # Étape 8 : Exécuter les tests Playwright
      - name: Run Playwright Tests
        run: |
          npx playwright install  # Installer Playwright (si nécessaire)
          npx playwright test  # Exécuter les tests
